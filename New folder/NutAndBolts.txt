function sortedarray = quicksort(arr)
    n = length(arr);  // Get the length of the input array
    
    if n <= 1
        sortedarray = arr;  // If the array has 1 or fewer elements, it's already sorted
        return
    end
    
    pivot = arr(1);  // Choose the first element as the pivot
    left = [];
    right = [];
    
    for i = 1:n
        if arr(i) < pivot
            left = [left, arr(i)];  // Elements smaller than the pivot go to the left
        elseif arr(i) > pivot
            right = [right, arr(i)];  // Elements greater than the pivot go to the right
        end
    end
    
    left = quicksort(left);   // Recursively sort the left subarray
    right = quicksort(right); // Recursively sort the right subarray
    
    sortedarray = [left, pivot, right];  // Combine the sorted subarrays with the pivot
end

nuts = [9,0,6,7,1];
bolts = [7,1,0,9,6];

//for i = 1:5
//    message = sprintf("Enter Size of Nut %d :", i);
//    nuts(i) = input(message);  // Input nut sizes
//end

//for i = 1:5
//    message = sprintf("Enter Size of Bolt %d :", i);
//    bolts(i) = input(message);  // Input bolt sizes
//end

sorted_nuts = quicksort(nuts);    // Sort nuts
sorted_bolts = quicksort(bolts);  // Sort bolts

for i = 1:5
    printf("Nut[%d] Matches With Bolt[%d]\n", sorted_nuts(i), sorted_bolts(i));  // Match nuts with bolts
end